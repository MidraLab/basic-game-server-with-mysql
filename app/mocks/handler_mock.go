// Code generated by MockGen. DO NOT EDIT.
// Source: handler_interface.go
//
// Generated by this command:
//
//	mockgen -source=handler_interface.go -destination=../../mocks/handler_mock.go -package=mocks
//
// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	bunrouter "github.com/uptrace/bunrouter"
	gomock "go.uber.org/mock/gomock"
)

// MockUserHandlerInterface is a mock of UserHandlerInterface interface.
type MockUserHandlerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockUserHandlerInterfaceMockRecorder
}

// MockUserHandlerInterfaceMockRecorder is the mock recorder for MockUserHandlerInterface.
type MockUserHandlerInterfaceMockRecorder struct {
	mock *MockUserHandlerInterface
}

// NewMockUserHandlerInterface creates a new mock instance.
func NewMockUserHandlerInterface(ctrl *gomock.Controller) *MockUserHandlerInterface {
	mock := &MockUserHandlerInterface{ctrl: ctrl}
	mock.recorder = &MockUserHandlerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserHandlerInterface) EXPECT() *MockUserHandlerInterfaceMockRecorder {
	return m.recorder
}

// DestroyHandle mocks base method.
func (m *MockUserHandlerInterface) DestroyHandle() bunrouter.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DestroyHandle")
	ret0, _ := ret[0].(bunrouter.HandlerFunc)
	return ret0
}

// DestroyHandle indicates an expected call of DestroyHandle.
func (mr *MockUserHandlerInterfaceMockRecorder) DestroyHandle() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DestroyHandle", reflect.TypeOf((*MockUserHandlerInterface)(nil).DestroyHandle))
}

// ScoreUpdateHandle mocks base method.
func (m *MockUserHandlerInterface) ScoreUpdateHandle() bunrouter.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ScoreUpdateHandle")
	ret0, _ := ret[0].(bunrouter.HandlerFunc)
	return ret0
}

// ScoreUpdateHandle indicates an expected call of ScoreUpdateHandle.
func (mr *MockUserHandlerInterfaceMockRecorder) ScoreUpdateHandle() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ScoreUpdateHandle", reflect.TypeOf((*MockUserHandlerInterface)(nil).ScoreUpdateHandle))
}

// UserCreateHandle mocks base method.
func (m *MockUserHandlerInterface) UserCreateHandle() bunrouter.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UserCreateHandle")
	ret0, _ := ret[0].(bunrouter.HandlerFunc)
	return ret0
}

// UserCreateHandle indicates an expected call of UserCreateHandle.
func (mr *MockUserHandlerInterfaceMockRecorder) UserCreateHandle() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UserCreateHandle", reflect.TypeOf((*MockUserHandlerInterface)(nil).UserCreateHandle))
}

// UserGetHandle mocks base method.
func (m *MockUserHandlerInterface) UserGetHandle() bunrouter.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UserGetHandle")
	ret0, _ := ret[0].(bunrouter.HandlerFunc)
	return ret0
}

// UserGetHandle indicates an expected call of UserGetHandle.
func (mr *MockUserHandlerInterfaceMockRecorder) UserGetHandle() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UserGetHandle", reflect.TypeOf((*MockUserHandlerInterface)(nil).UserGetHandle))
}

// UserRankingGetHandle mocks base method.
func (m *MockUserHandlerInterface) UserRankingGetHandle() bunrouter.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UserRankingGetHandle")
	ret0, _ := ret[0].(bunrouter.HandlerFunc)
	return ret0
}

// UserRankingGetHandle indicates an expected call of UserRankingGetHandle.
func (mr *MockUserHandlerInterfaceMockRecorder) UserRankingGetHandle() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UserRankingGetHandle", reflect.TypeOf((*MockUserHandlerInterface)(nil).UserRankingGetHandle))
}
